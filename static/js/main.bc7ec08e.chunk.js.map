{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/cards-list.compnent.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,wBCGFA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAK,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,eACvB,6BAAKL,EAAMI,QAAQE,OACnB,kCAAKN,EAAMI,QAAQG,aCFdC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAY,YAAjB,SAEDD,EAAMS,SAASC,KACb,SAAAN,GAAO,OACL,cAAC,EAAD,CAAwBA,QAAWA,GAAvBA,EAAQC,UCNrBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAErC,OAAO,uBACCZ,UAAc,SACda,KAAc,SACdF,YAAeA,EACfG,SAAeF,MC4CZG,E,kDA9Cb,aAAgB,IAAD,8BACb,gBAEKC,MAAO,CACVR,SAAU,GACVS,YAAa,IALF,E,qDAUf,WACC,IAAD,OACEC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OACZA,EAASC,UAEVF,MAAM,SAAAG,GAAK,OACV,EAAKC,SACH,CACEf,SAAWc,S,oBAOrB,WAAU,IAAD,SAE2BE,KAAKR,MAA/BR,EAFD,EAECA,SAAUS,EAFX,EAEWA,YACZQ,EAA4BjB,EAASkB,QAAQ,SAAAvB,GAAO,OACxDA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYY,wBAElD,OACE,sBAAK7B,UAAY,MAAjB,UACE,kDACA,cAAC,EAAD,CACEW,YAAe,kBACfC,aAAgB,SAAAkB,GAAC,OAAG,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAE5D,cAAC,EAAD,CAAUxB,SAAYiB,W,GAxCZQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc7ec08e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className = 'card-container'>\n        <img alt= 'monster' src= {`https://robohash.org/${props.monster.id}?set=set2`}/>\n        <h2>{props.monster.name}</h2>\n        <p> {props.monster.email}</p>\n    </div>\n)\n","import React from \"react\";\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\n\nexport const CardList = props => {\n    return <div className = 'card-list'>\n        {\n          props.monsters.map(\n            monster => (\n              <Card key= {monster.id} monster = {monster}/>\n            )\n          )\n        }\n    </div>\n}","import React from \"react\";\nimport \"./search-box.styles.css\";\n\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\n    return <input\n            className   = 'search'\n            type        = 'search'\n            placeholder = {placeholder}\n            onChange    = {handleChange}\n        />\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/cards-list.compnent';\nimport  {SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor () {\n    super();\n\n    this.state ={\n      monsters: [],\n      searchField: ''\n    };\n    \n  };\n\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response =>\n        response.json()\n      )\n      .then( users=> \n        this.setState(\n          { \n            monsters : users\n          }\n      )\n    );\n\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters          = monsters.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())  \n    )\n    return (\n      <div className = 'App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder  = 'Search Monsters'\n          handleChange = {e=> this.setState({ searchField: e.target.value})}\n        />\n        <CardList monsters = {filteredMonsters}></CardList>         \n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}